# #############################################################
# ## JOB DESCRIPTION                                         ##
# #############################################################

# # Following an Minimization+NPT equilibration before production
# # Here, do a SMD along x axis

# #############################################################
# ## ADJUSTABLE PARAMETERS                                   ##
# #############################################################
# source ../box_dimension.dat
# # n_stage, RunStep_tot, RunStep_sep
# source ../path_lib.dat

# set PrevStep [expr ${RunStep_sep}*1+0]
# set PrevName ./smdout_S1
# set ThisName smdout_S2

# # -----------------------------------------------------------

set Fix_X0       1
set Restraint_X1 1
set SMD_X1       1

set outputname     ${ThisName}

set  Equi_Path       ../1_Equilibrate_system
set  StartFromEqui   1
set temperature      310

# structure          ../TestProt_chain_0_after_psf_AlongX_WB.psf
# coordinates        ../TestProt_chain_0_after_psf_AlongX_WB.pdb

structure          ../TestProt_chain_0_after_psf.psf
# coordinates        ../TestProt_chain_0_after_psf_AlongX.pdb
coordinates        ../TestProt_chain_0_after_psf_AlongX_AfterEq.pdb


# Continuing a job from the restart files
if {$StartFromEqui} {
# set inputname      "${Equi_Path}/TestProt_chain_0_after_psf_AlongX_WB_NPT"
set inputname      "${PrevName}"
binCoordinates     $inputname.restart.coor
binVelocities      $inputname.restart.vel  ;# remove the "temperature" entry if you use this!
extendedSystem	   $inputname.restart.xsc
}

firsttimestep      ${PrevStep}


#############################################################
## SIMULATION PARAMETERS                                   ##
#############################################################

# Input
paraTypeCharmm	    on
# parameters          ../top_all36_prot.rtf
parameters          ../../${code_path}/par_all27_prot_lipid.inp


## ==========================================================
## Initialization
## ==========================================================
##
## Initialize temp or atom velocity
##
# NOTE: Do not set the initial velocity temperature if you 
# have also specified a .vel restart file!
if {$StartFromEqui==0} {
temperature         $temperature
}

# ##
# ## Periodic Boundary conditions
# # NOTE: Do not set the periodic cell basis if you have also 
# # specified an .xsc restart file!
# if {$StartFromEqui==0} { 
# cellBasisVector1     102.4 0.0 0.0
# cellBasisVector2     0.0 31.805999755859375 0.0
# cellBasisVector3     0.0 0.0 32.03499984741211
# cellOrigin           3.3518131971359253 1.0378179550170898 0.01656307280063629
# }
# # wrapWater           on
# wrapAll             on


## ==========================================================
## Force field and steps
## ==========================================================

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Implicit Solvent
gbis                on
alphaCutoff         12.0
ionConcentration    0.3
# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# Force-Field Parameters
exclude             scaled1-4
1-4scaling          1.0
cutoff              14.0 ; # 12.0
switching           on
switchdist          13.0 ; # 10.0
pairlistdist        16.0 ; # 14.0


# Integrator Parameters
timestep            1.0  ;# 1fs/step # 2fs/step
rigidBonds          all  ;# needed for 2fs steps
nonbondedFreq       1
fullElectFrequency  2  
stepspercycle       10

# # PME (for full-system periodic electrostatics)
# PME                 yes
# PMEGridSpacing      1.0

# #manual grid definition
# #PMEGridSizeX        45
# #PMEGridSizeY        45
# #PMEGridSizeZ        48

## ==========================================================
## NVT
## ==========================================================
##
# Constant Temperature Control
if {1} {
langevin            on    ;# do langevin dynamics
langevinDamping     1     ;# damping coefficient (gamma) of 1/ps
langevinTemp        $temperature
langevinHydrogen    off    ;# don't couple langevin bath to hydrogens
}

# Constant Pressure Control (variable volume)-- for NPT
if {0} {
useGroupPressure      yes ;# needed for rigidBonds
useFlexibleCell       no
useConstantArea       no

langevinPiston        on
langevinPistonTarget  1.01325 ;#  in bar -> 1 atm
langevinPistonPeriod  100.0
langevinPistonDecay   50.0
langevinPistonTemp    $temperature
}


## ==========================================================
## Output
## ==========================================================
outputName          $outputname

restartfreq         1000     ;# 1000steps = every 1ps
dcdfreq             1000
xstFreq             1000
outputEnergies      200      ;# 100steps = every 0.2 ps
outputPressure      200


#############################################################
## EXTRA PARAMETERS                                        ##
#############################################################

# Fixed Atoms Constraint (set PDB beta-column to 1)
if {$Fix_X0} {
fixedAtoms          on
fixedAtomsFile      ../TestProt_chain_0_after_psf_AlongX_AfterEq.ref
fixedAtomsCol       B
}

# Put here any custom parameters that are specific to 
# this job (e.g., SMD, TclForces, etc...)

### add for SMD
SMD            on
SMDFile        ../TestProt_chain_0_after_psf_AlongX_AfterEq.ref
SMDK           ${SMD_Sti} ;
# SMDk           1.0 ; # 10. ; # 2.39 ; # kcal/mol/Ã…^2 based on Sinan's thesis SMD for beta sheet
# SMDVel         0.0001 ; # has to be set by user, 0.0001 A/timestep = 0.0001 A/fs = 0.1 A/ps
SMDVel         ${SMD_Vel} ; # has to be set by user, 0.0001 A/timestep = 0.0001 A/fs = 0.1 A/ps
SMDDir         1.0 0.0 0.0
SMDOutputFreq  200 ; # every 0.2 ps or 0.02 A report # 1000 ; #every 1 ps or 0.1A report

# # use the TensinLen to calculate the steps
# set RunStep [expr int(${TensinLen}/0.0001)]
# # note: number of steps must be a multiple of stepsPerCycle
# set RunStep [expr int(${RunStep}/200)*200]

#############################################################
## EXECUTION SCRIPT                                        ##
#############################################################

# Minimization
if {0} {
minimize            100
reinitvels          $temperature
}

# to pull 200 A, need 1000*10*200 steps = 1 ps*10*200 = 2000 ps = 2 ns
# run 2500000; # for 2.5ns, pull 250 A
# puts "Now, run ${RunStep} steps..."
# run ${RunStep}

puts "Now, for S2 stage, run ${RunStep_sep} steps..."
run ${RunStep_sep}

# run 2000000 ; #4ns
puts "SMD: Done."